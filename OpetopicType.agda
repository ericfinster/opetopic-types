{-# OPTIONS --without-K --rewriting --no-positivity #-}

open import MiniHoTT
open import PositionUniverse

module OpetopicType where

  --
  --  The Universe of Opetopic Types
  --

  ๐ : (โ : Level) โ โ โ Set (โ-suc โ)
  Frm : โ {โ} {n : โ} โ ๐ โ n โ Set โ

  postulate 

    Cns : โ {โ} {n : โ} (X : ๐ โ n)
      โ (f : Frm X) (P : โ) (t : ฯโ P (cst (Frm X)))
      โ Set โ

  -- These should be reindexed to start at -1 ...
  ๐ โ O = โค 
  ๐ โ (S n) = ฮฃ (๐ โ n) (ฮป X โ (f : Frm X) โ Set โ)

  Frm {n = O} X = โค
  Frm {n = S n} (Xโ , Xโโ) =
    ฮฃ (Frm Xโ) (ฮป f โ
    ฮฃ (Xโโ f) (ฮป x โ 
    ฮฃ โ (ฮป P โ
    ฮฃ (ฯโ P (cst (Frm Xโ))) (ฮป ฮดf โ
    ฮฃ (ฯโ P (ฮป p โ Xโโ (app ฮดf p))) (ฮป ฮดx โ 
    Cns Xโ f P ฮดf)))))

  postulate

    ฮท-cns : โ {โ} {n : โ} {X : ๐ โ n} (f : Frm X)
      โ Cns X f โคโ (ฯ-โค (cst (Frm X)) f)

    ฮผ-cns : โ {โ} {n : โ} {X : ๐ โ n}
      โ {c-frm : Frm X} {c-pos : โ} {c-typ : ฯโ c-pos (cst (Frm X))}
      โ (c : Cns X c-frm c-pos c-typ)
      โ (ฮด : ฯโ c-pos (ฮป p โ ฮฃ โ (ฮป ฮด-pos โ
                             ฮฃ (ฯโ ฮด-pos (cst (Frm X))) (ฮป ฮด-typ โ
                             Cns X (app c-typ p) ฮด-pos ฮด-typ))))
      โ Cns X c-frm (ฮฃโ c-pos (map {Y = ฮป _ _ โ โ} (ฮป _ โ fst) ฮด))
                    (ฯ-ฮฃ c-pos (map (ฮป _ โ fst) ฮด) (cst (Frm X))
                       (map {Y = ฮป u opr โ ฯโ (fst opr) (cst (Frm X))}
                         (ฮป u opr โ fst (snd opr)) ฮด))

    -- objects
    obj : โ {โ} (P : โ) โ Cns {โ = โ} {n = O} tt tt P (cstโ P tt)

    -- leaves
    lf : โ {โ} {n : โ} (Xโ : ๐ โ n) (Xโโ : Frm Xโ โ Set โ)
      โ (f : Frm Xโ) (x : Xโโ f)
      -- Can we make the fibration implicit for โค and โฅ? 
      โ Cns (Xโ , Xโโ) (f , x , _ , _ , ฯ-โค (ฮป t โ Xโโ (app (ฯ-โค (cst (Frm Xโ)) f) t)) x , ฮท-cns f) โฅโ (ฯ-โฅ _)

    -- nodes
    nd : โ {โ} {n : โ} (Xโ : ๐ โ n) (Xโโ : Frm Xโ โ Set โ)
      โ {c-frm : Frm Xโ} {c-pos : โ} {c-typ : ฯโ c-pos (cst (Frm Xโ))}
      โ (c : Cns Xโ c-frm c-pos c-typ)
      โ (ฮด : ฯโ c-pos (ฮป p โ ฮฃ โ (ฮป ฮด-pos โ
                             ฮฃ (ฯโ ฮด-pos (cst (Frm Xโ))) (ฮป ฮด-typ โ
                             Cns Xโ (app c-typ p) ฮด-pos ฮด-typ))))
                             
      โ (x : Xโโ c-frm) (x' : ฯโ c-pos (ฮป p โ Xโโ (app c-typ p)))
      โ (x'' : ฯโ c-pos (ฮป p โ ฯโ (fst (app ฮด p)) (ฮป q โ Xโโ (app (fst (snd (app ฮด p))) q))))

      โ (ฮต : ฯโ c-pos (ฮป p โ ฮฃ โ (ฮป ฮต-pos โ
                             ฮฃ (ฯโ ฮต-pos (cst (Frm (Xโ , Xโโ)))) (ฮป ฮต-typ โ
                             Cns (Xโ , Xโโ) (app c-typ p , app x' p , fst (app ฮด p) , fst (snd (app ฮด p)) , app x'' p , snd (snd (app ฮด p))) ฮต-pos ฮต-typ))))
                             
      โ Cns (Xโ , Xโโ) (c-frm , x , _ , _ , ฯ-ฮฃ c-pos (map (ฮป _ โ fst) ฮด) _ x'' , ฮผ-cns c ฮด)
          (โคโ โโ ฮฃโ c-pos (map {Y = ฮป _ _ โ โ} (ฮป _ โ fst) ฮต))
          (ฯ-โ {U = โคโ} {V = ฮฃโ c-pos (map {Y = ฮป _ _ โ โ} (ฮป _ โ fst) ฮต)}
            (cst (Frm (Xโ , Xโโ))) (ฯ-โค _ (c-frm , x , c-pos , c-typ , x' , c))
                                  (ฯ-ฮฃ c-pos (map (ฮป _ โ fst) ฮต) (cst (Frm (Xโ , Xโโ)))
                                         (map (ฮป u opr โ fst (snd opr)) ฮต )))





